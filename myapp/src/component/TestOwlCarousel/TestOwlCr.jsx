import React, { useEffect, useState } from "react";
import styled from "styled-components";
import Carousel from "react-multi-carousel";
import { Form, Button } from "react-bootstrap";
import "bootstrap/dist/css/bootstrap.min.css";

import "react-multi-carousel/lib/styles.css";
// import { Link } from "react-router-dom";
import jbplogo from "../../photos/jbplogo.png";
import axios from "axios";

const responsive = {
  desktop: {
    breakpoint: { max: 3000, min: 1024 },
    items: 1,
    slidesToSlide: 1, // optional, default to 1.
  },
  tablet: {
    breakpoint: { max: 1024, min: 464 },
    items: 1,
    slidesToSlide: 1, // optional, default to 1.
  },
  mobile: {
    breakpoint: { max: 464, min: 0 },
    items: 1,
    slidesToSlide: 1, // optional, default to 1.
  },
};

const StoryPart = () => {
  const [results, setResults] = useState([]);
  const [selectedOption, setSelectedOption] = useState("");

  const handleOptionChange = (event) => {
    setSelectedOption(event.target.value);
  };

  const handleButtonClick = () => {
    // Perform any desired actions before updating the state
    console.log("Selected Option:", selectedOption);

    // Update the state
    setSelectedOption("option2");
  };
  const handleSearch = async () => {
    try {
      const response = await axios.get(
        `http://localhost:8100/api/auth/tokenReciept`
      );
      console.log(response.data);
      setResults(response.data);
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    handleSearch();
  }, []);
  return (
    <>
      <Container>
        {/* <h1 className="text-center mt-5 mb-5">Media</h1> */}
        <Carousel
          // swipeable={true}
          // draggable={true}
          // showDots={true}
          responsive={responsive}
          // ssr={true} // means to render carousel on server-side.
          // infinite={true}
          // autoPlay={true}
          autoPlaySpeed={1000}
          keyBoardControl={true}
          // customTransition="all 5s ease-in-out"
          transitionDuration={1000}
          containerClass="carousel-container"
          removeArrowOnDeviceType={["tablet", "mobile"]}
          // deviceType={this.props.deviceType}
          dotListClass="custom-dot-list-style"
          itemClass="carousel-item-padding-40-px"
          buttonType="button"
        >
          {results.map((item) => (
            <div key={item.id}>
              <div className="my-slide-component container">
                <div class="card mt-5">
                  <div class="card-body">
                    <img src={jbplogo} alt="Card" className="card-image" />
                    <div className="cardp mt-5 text-start">
                      <p className="fw-bold">UHID : {item.uhid}</p>
                      <p>
                        {" "}
                        Patient Name : {item.firstname} {item.lastname}
                      </p>
                      <p>Assigned Doctor : {item.Doctor_name}</p>
                      <p>Department : {item.Dept}</p>
                      <p>Token Generated by : {item.fullname}</p>
                      <p>Token generated on Date: {item.regdatetime}</p>
                      <p>Room No : {item.Room_No}</p>
                      <p>Counter No : {item.Counter_No}</p>
                    </div>

                    <div className="card-content mt-5">
                      <h2 className="cardh"> Token No: {item.Token_ID}</h2>
                    </div>
                    <div className="statusPart">
                      <h3 className="text-center">
                        Patient status : {item.treatment_status}
                      </h3>
                      <div className="formRadio">
                        <Form>
                          <Form.Check
                            type="radio"
                            label="Pending"
                            className="formcheck"
                            name="radioGroup"
                            value="Pending"
                            checked={selectedOption === "Pending"}
                            onChange={handleOptionChange}
                          />
                          <Form.Check
                            type="radio"
                            label="Treated"
                            name="radioGroup"
                            value="Treated"
                            checked={selectedOption === "Treated"}
                            onChange={handleOptionChange}
                          />
                          <Form.Check
                            type="radio"
                            label="Current"
                            name="radioGroup"
                            value="Current"
                            checked={selectedOption === "Current"}
                            onChange={handleOptionChange}
                          />
                          <Form.Check
                            type="radio"
                            label="Patient Absent"
                            name="radioGroup"
                            value="Patient_Absent"
                            checked={selectedOption === "Patient_Absent"}
                            onChange={handleOptionChange}
                            // style={{ paddingLeft: "3rem !important" }}
                          />
                        </Form>
                        <Button
                          className="btn btn-success"
                          style={{ backgroundColor: "#22923ad4" }}
                          onClick={handleButtonClick}
                        >
                          Change Status
                        </Button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </Carousel>
        ;
      </Container>
    </>
  );
};

export default StoryPart;
const Container = styled.div`
.my-slide-component{
  display:flex;
  justify-content:center;
  align-items:center;

}
// .mg-card{
//   border: 2px solid black !important;
// }
  .card {
    border: 1px solid black !important;
  }
  .my-slide-component container{
    width: 100%,
    height: 100%,
  }

  span {
    @media (max-width: 500px) {
      display: none;
    }
    @media (max-width: 376px) {
      display: none;
    }
  }
  img {
    @media (max-width: 500px) {
      width: 18rem;
    }
    @media (max-width: 376px) {
      width: 18rem;
    }
  }
  .card-body{
    display: flex,
    flex-direction: column,
    justify-content: center,
    align-content: center,
    align-items: center,
  }
  p{
    margin:0;
  }
  .statusPart{
    padding-top:1rem;
    padding: 1rem;
    border-radius: 1rem;
    background-color:#95d3a2d4;
    width:100%;
    height:100%;
    display:flex;
    justify-content:center;
    align-items:center;
    flex-direction:column;
    Form{
    display:flex;
    flex-direction:row;
    justify-content:center;
    align-items:center;
    grid-column-gap: 1rem;
    .formcheck{
      // background-color:red!important;
      // margin:2rem;
    }
    }
    h3{

    }
  }
  .formRadio{
    display: flex;
    justify-content: center;
    align-content: center;
    flex-direction: column;
    padding:1rem 0rem;
  }
  

`;
