import React, { useRef, useState } from "react";
import styled from "styled-components";
import Header from "./Header";
import { BsSearch } from "react-icons/bs";
import jbplogo from "../photos/jbplogo.png";
import axios from "axios";
import { Link } from "react-router-dom";
import ReactToPrint from "react-to-print";

const TokenSearch = () => {
  const [keyword, setKeyword] = useState("");
  const [results, setResults] = useState([]);
  const [reciept, setReciept] = useState(false);
  const printContentRef = useRef();
  console.log(keyword.trim());

  const handleSearch = async () => {
    try {
      const response = await axios.get(
        `http://localhost:8100/api/auth/Search-patient?keyword=${keyword}`
      );
      console.log(response.data);
      setResults(response.data);
    } catch (error) {
      console.log(error);
    }
  };

  const recieptHandler = () => {
    setReciept(true);
  };

  const handlePrint = () => {
    window.print();
  };

  console.log(reciept);

  return (
    <>
      <Container>
        <Header />
        <div className="container">
          <div class="input-group">
            <input
              type="search"
              value={keyword}
              placeholder="search patient"
              onChange={(e) => setKeyword(e.target.value)}
              aria-describedby="button-addon1"
              class="form-control border-0 bg-light"
            />
            <div class="input-group-append">
              <button
                id="button-addon1"
                type="submit"
                class="btn btn-primary text-light"
                onClick={handleSearch}
              >
                <BsSearch />
              </button>
            </div>
          </div>

          <div className="container-fluid">
            {results.map((result) => (
              // <li key={result.uhid}>{result.P_Email}</li>
              <>
                <div className="table-responsive mt-5">
                  <table id="table" className="table">
                    <thead>
                      <tr>
                        <th>P_ID</th>
                        <th>P_Name</th>
                        <th>P_Contact</th>
                        <th>Assigned_doctor</th>
                        <th>Time</th>
                        <th>Dept</th>
                        <th>Token ID</th>
                        <th>Print Token</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr key={result.uhid}>
                        <td>{result.uhid}</td>
                        <td>
                          {result.firstname} {result.lastname}
                        </td>
                        <td>{result.P_Contact}</td>
                        <td>{result.Assigned_doctor}</td>
                        <td>{result.Time}</td>
                        <td>{result.Dept}</td>
                        <td>{result.Token_ID}</td>
                        <td>
                          <button
                            className="btn btn-primary"
                            onClick={recieptHandler}
                          >
                            Print Token
                          </button>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </>
            ))}
          </div>
          {/* receipt */}
          {reciept && (
            <>
              <div className="container genToken">
                <h1
                  className="text-center fs-1 fw-bold"
                  style={{ color: "#347571" }}
                >
                  Token Generated
                </h1>

                <div class="card mt-5" id="tokenPrint" ref={printContentRef}>
                  <div class="card-body">
                    <img src={jbplogo} alt="Card" className="card-image" />
                    <div className="cardp mt-5 text-start">
                      <p className="fw-bold">UHID : {results[0].uhid}</p>
                      <p>
                        {" "}
                        Patient Name : {results[0].firstname}{" "}
                        {results[0].lastname}
                      </p>
                      <p>Assigned Doctor : {results[0].Doctor_name}</p>
                      <p>Department : {results[0].Dept}</p>
                      <p>Token Generated by : {results[0].fullname}</p>
                      <p>Token generated on Date: {results[0].regdatetime}</p>
                      <p>Room No : {results[0].Room_No}</p>
                      <p>Counter No :{results[0].Counter_No}</p>
                    </div>

                    <div className="card-content mt-5">
                      <h2 className="cardh">
                        {" "}
                        Token No: {results[0].Token_ID}
                      </h2>
                    </div>
                  </div>
                </div>
                <div className="container foot-btn">
                  <div className="row g-3">
                    {/* <div className="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 btnText">
                  <button>Send Token as SMS</button>
                </div> */}
                    <div className="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 btnText">
                      <ReactToPrint
                        trigger={() => <button>Print Token</button>}
                        content={() => printContentRef.current}
                      />
                    </div>
                    <div className="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 btnText">
                      <button>
                        <Link to="/receptionist-dashboard">
                          Go To Dashboard
                        </Link>
                      </button>
                    </div>
                    {/* <div className="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 btnText">
                  <button>
                    {" "}
                    <Link to="/token-gen-form">
                      Generate Token for other Patient
                    </Link>
                  </button>
                </div> */}
                  </div>
                </div>
              </div>
            </>
          )}
        </div>
      </Container>
    </>
  );
};

export default TokenSearch;
const Container = styled.div`
  .container {
    display: flex;
    flex-direction: column;
  }
  .form-control:focus {
    box-shadow: none;
  }
  .form-control-underlined {
    border-width: 0;
    border-bottom-width: 1px;
    border-radius: 0;
    padding-left: 0;
  }
  .form-control::placeholder {
    font-size: 0.95rem;
    color: #aaa;
    font-style: italic;
  }
  table {
    button {
      height: 100% !important;
      background-color: #47a45b;
      border: none;
    }
  }
  .input-group {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    width: 100%;
    flex-direction: row;
    align-content: center;
    justify-content: center;
    padding: 1rem 20rem;

    input {
      border-radius: 1rem;
      //   padding: 1rem;
      width: 50%;
      position: relative;
      border: 1px solid #47a45b !important;
    }
  }
  a {
    text-decoration: none;
    color: white;
  }

  .genToken {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-content: center;
    justify-content: center;
    align-items: center;
  }
  .image {
    width: 35rem;
  }
  .card {
    width: 35rem;
    border: 2px solid black;
    .card-content {
    }
  }
  .card-body {
    display: flex;
    flex-direction: column;
    align-content: center;
    justify-content: center;
    align-items: center;
    .cardp {
    }
  }
  .cardp {
    margin-left: -4rem;
    p {
      margin: 0;
    }
  }

  .foot-btn {
    width: 60%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .btnText {
    display: flex;
    justify-content: center;
    button {
      padding: 0.7rem 1.5rem;
      border: none;
      color: #fff;
      font-weight: bold;
      background-color: #5ec57e;
      border-radius: 1.5rem;
    }
  }
  @media print {
    body {
      display: flex;
      justify-content: center;
      align-item: center;
    }

    #tokenPrint {
      margin: 0 auto;
      max-width: 800px;
    }
  }
`;
